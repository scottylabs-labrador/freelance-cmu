{"version":3,"file":"RouterClient.cjs","sources":["../../../src/ssr/RouterClient.tsx"],"sourcesContent":["import { hydrate } from '@tanstack/router-core/ssr/client'\nimport { Await } from '../awaited'\nimport { RouterProvider } from '../RouterProvider'\nimport type { AnyRouter } from '@tanstack/router-core'\n\nlet hydrationPromise: Promise<void | Array<Array<void>>> | undefined\n\nexport function RouterClient(props: { router: AnyRouter }) {\n  if (!hydrationPromise) {\n    if (!props.router.state.matches.length) {\n      hydrationPromise = hydrate(props.router)\n    } else {\n      hydrationPromise = Promise.resolve()\n    }\n  }\n  return (\n    <Await\n      promise={hydrationPromise}\n      children={() => <RouterProvider router={props.router} />}\n    />\n  )\n}\n"],"names":["hydrate","jsx","Await","RouterProvider"],"mappings":";;;;;;AAKA,IAAI;AAEG,SAAS,aAAa,OAA8B;AACzD,MAAI,CAAC,kBAAkB;AACrB,QAAI,CAAC,MAAM,OAAO,MAAM,QAAQ,QAAQ;AACtC,yBAAmBA,OAAAA,QAAQ,MAAM,MAAM;AAAA,IACzC,OAAO;AACL,yBAAmB,QAAQ,QAAA;AAAA,IAC7B;AAAA,EACF;AACA,SACEC,2BAAAA;AAAAA,IAACC,QAAAA;AAAAA,IAAA;AAAA,MACC,SAAS;AAAA,MACT,UAAU,MAAMD,2BAAAA,IAACE,eAAAA,gBAAA,EAAe,QAAQ,MAAM,OAAA,CAAQ;AAAA,IAAA;AAAA,EAAA;AAG5D;;"}