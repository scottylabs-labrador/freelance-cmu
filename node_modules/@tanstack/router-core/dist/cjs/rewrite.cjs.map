{"version":3,"file":"rewrite.cjs","sources":["../../src/rewrite.ts"],"sourcesContent":["import { joinPaths, trimPath } from './path'\nimport type { LocationRewrite } from './router'\n\nexport function composeRewrites(rewrites: Array<LocationRewrite>) {\n  return {\n    input: ({ url }) => {\n      for (const rewrite of rewrites) {\n        url = executeRewriteInput(rewrite, url)\n      }\n      return url\n    },\n    output: ({ url }) => {\n      for (let i = rewrites.length - 1; i >= 0; i--) {\n        url = executeRewriteOutput(rewrites[i], url)\n      }\n      return url\n    },\n  } satisfies LocationRewrite\n}\n\nexport function rewriteBasepath(opts: {\n  basepath: string\n  caseSensitive?: boolean\n}) {\n  const trimmedBasepath = trimPath(opts.basepath)\n  const regex = new RegExp(\n    `^/${trimmedBasepath}/`,\n    opts.caseSensitive ? '' : 'i',\n  )\n  return {\n    input: ({ url }) => {\n      url.pathname = url.pathname.replace(regex, '/')\n      return url\n    },\n    output: ({ url }) => {\n      url.pathname = joinPaths(['/', trimmedBasepath, url.pathname])\n      return url\n    },\n  } satisfies LocationRewrite\n}\n\nexport function executeRewriteInput(\n  rewrite: LocationRewrite | undefined,\n  url: URL,\n): URL {\n  const res = rewrite?.input?.({ url })\n  if (res) {\n    if (typeof res === 'string') {\n      return new URL(res)\n    } else if (res instanceof URL) {\n      return res\n    }\n  }\n  return url\n}\n\nexport function executeRewriteOutput(\n  rewrite: LocationRewrite | undefined,\n  url: URL,\n): URL {\n  const res = rewrite?.output?.({ url })\n  if (res) {\n    if (typeof res === 'string') {\n      return new URL(res)\n    } else if (res instanceof URL) {\n      return res\n    }\n  }\n  return url\n}\n"],"names":["trimPath","joinPaths"],"mappings":";;;AAGO,SAAS,gBAAgB,UAAkC;AAChE,SAAO;AAAA,IACL,OAAO,CAAC,EAAE,UAAU;AAClB,iBAAW,WAAW,UAAU;AAC9B,cAAM,oBAAoB,SAAS,GAAG;AAAA,MACxC;AACA,aAAO;AAAA,IACT;AAAA,IACA,QAAQ,CAAC,EAAE,UAAU;AACnB,eAAS,IAAI,SAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC7C,cAAM,qBAAqB,SAAS,CAAC,GAAG,GAAG;AAAA,MAC7C;AACA,aAAO;AAAA,IACT;AAAA,EAAA;AAEJ;AAEO,SAAS,gBAAgB,MAG7B;AACD,QAAM,kBAAkBA,KAAAA,SAAS,KAAK,QAAQ;AAC9C,QAAM,QAAQ,IAAI;AAAA,IAChB,KAAK,eAAe;AAAA,IACpB,KAAK,gBAAgB,KAAK;AAAA,EAAA;AAE5B,SAAO;AAAA,IACL,OAAO,CAAC,EAAE,UAAU;AAClB,UAAI,WAAW,IAAI,SAAS,QAAQ,OAAO,GAAG;AAC9C,aAAO;AAAA,IACT;AAAA,IACA,QAAQ,CAAC,EAAE,UAAU;AACnB,UAAI,WAAWC,eAAU,CAAC,KAAK,iBAAiB,IAAI,QAAQ,CAAC;AAC7D,aAAO;AAAA,IACT;AAAA,EAAA;AAEJ;AAEO,SAAS,oBACd,SACA,KACK;AACL,QAAM,MAAM,SAAS,QAAQ,EAAE,KAAK;AACpC,MAAI,KAAK;AACP,QAAI,OAAO,QAAQ,UAAU;AAC3B,aAAO,IAAI,IAAI,GAAG;AAAA,IACpB,WAAW,eAAe,KAAK;AAC7B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;AAEO,SAAS,qBACd,SACA,KACK;AACL,QAAM,MAAM,SAAS,SAAS,EAAE,KAAK;AACrC,MAAI,KAAK;AACP,QAAI,OAAO,QAAQ,UAAU;AAC3B,aAAO,IAAI,IAAI,GAAG;AAAA,IACpB,WAAW,eAAe,KAAK;AAC7B,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO;AACT;;;;;"}