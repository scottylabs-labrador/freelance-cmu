{"version":3,"file":"config.cjs","sources":["../../src/config.ts"],"sourcesContent":["import type { SSROption } from './router'\nimport type { AnySerializationAdapter } from './ssr/serializer/transformer'\n\nexport interface RouterConfigOptions<\n  in out TSerializationAdapters,\n  in out TDefaultSsr,\n> {\n  serializationAdapters?: TSerializationAdapters\n  defaultSsr?: TDefaultSsr\n}\n\nexport interface RouterConfig<\n  in out TSerializationAdapters,\n  in out TDefaultSsr,\n> {\n  '~types': RouterConfigTypes<TSerializationAdapters, TDefaultSsr>\n  serializationAdapters: TSerializationAdapters\n  defaultSsr: TDefaultSsr | undefined\n}\n\nexport interface RouterConfigTypes<\n  in out TSerializationAdapters,\n  in out TDefaultSsr,\n> {\n  serializationAdapters: TSerializationAdapters\n  defaultSsr: TDefaultSsr\n}\n\nexport const createRouterConfig = <\n  const TSerializationAdapters extends\n    ReadonlyArray<AnySerializationAdapter> = [],\n  TDefaultSsr extends SSROption = SSROption,\n>(\n  options: RouterConfigOptions<TSerializationAdapters, TDefaultSsr>,\n): RouterConfig<TSerializationAdapters, TDefaultSsr> => {\n  return {\n    serializationAdapters: options.serializationAdapters,\n    defaultSsr: options.defaultSsr,\n  } as RouterConfig<TSerializationAdapters, TDefaultSsr>\n}\n\nexport type AnyRouterConfig = RouterConfig<any, any>\n"],"names":[],"mappings":";;AA4BO,MAAM,qBAAqB,CAKhC,YACsD;AACtD,SAAO;AAAA,IACL,uBAAuB,QAAQ;AAAA,IAC/B,YAAY,QAAQ;AAAA,EAAA;AAExB;;"}