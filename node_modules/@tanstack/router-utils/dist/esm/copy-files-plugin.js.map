{"version":3,"file":"copy-files-plugin.js","sources":["../../src/copy-files-plugin.ts"],"sourcesContent":["import { copyFile, mkdir } from 'node:fs/promises'\nimport { dirname, join } from 'pathe'\nimport fg from 'fast-glob'\nimport type { Plugin } from 'vite'\n\nexport function copyFilesPlugin({\n  fromDir,\n  toDir,\n  pattern = '**',\n}: {\n  pattern?: string | Array<string>\n  fromDir: string\n  toDir: string\n}): Plugin {\n  return {\n    name: 'copy-files',\n    async writeBundle() {\n      const entries = await fg(pattern, { cwd: fromDir })\n      if (entries.length === 0) {\n        throw new Error(\n          `No files found matching pattern \"${pattern}\" in directory \"${fromDir}\"`,\n        )\n      }\n\n      for (const entry of entries) {\n        const srcPath = join(fromDir, entry)\n        const destPath = join(toDir, entry)\n        // Ensure the destination directory exists\n        await mkdir(dirname(destPath), { recursive: true })\n        await copyFile(srcPath, destPath)\n      }\n    },\n  }\n}\n"],"names":[],"mappings":";;;AAKO,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA,UAAU;AACZ,GAIW;AACT,SAAO;AAAA,IACL,MAAM;AAAA,IACN,MAAM,cAAc;AAClB,YAAM,UAAU,MAAM,GAAG,SAAS,EAAE,KAAK,SAAS;AAClD,UAAI,QAAQ,WAAW,GAAG;AACxB,cAAM,IAAI;AAAA,UACR,oCAAoC,OAAO,mBAAmB,OAAO;AAAA,QAAA;AAAA,MAEzE;AAEA,iBAAW,SAAS,SAAS;AAC3B,cAAM,UAAU,KAAK,SAAS,KAAK;AACnC,cAAM,WAAW,KAAK,OAAO,KAAK;AAElC,cAAM,MAAM,QAAQ,QAAQ,GAAG,EAAE,WAAW,MAAM;AAClD,cAAM,SAAS,SAAS,QAAQ;AAAA,MAClC;AAAA,IACF;AAAA,EAAA;AAEJ;"}